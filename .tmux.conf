# prefix
# C-t is used by ctags
set-option -g prefix C-j
# set-option -g prefix C-t
# unbind-key C-b
# bind-key C-t send-prefix

### これ tmux-sensible でやってくれるっぽい
set-option -g default-terminal screen-256color

# Macのtmux内で clipboard+=unnamed な Vim でヤンク・コピーをすると
# E353: Nothing in register * というエラーが出る。
## brew install reattach-to-user-namespace
## ビルドして使う場合
## git clone https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard.git
## cd tmux-MacOSX-pasteboard
## make reattach-to-user-namespace
## cp reattach-to-user-namespace ~/bin/
# if-shell 'test "$(uname)" = "Darwin"' 'set-option -g default-command "reattach-to-user-namespace -l zsh"'

### これ tmux-sensible でやってくれるっぽい
if-shell "uname | grep -q Darwin" 'set-option -g default-command "reattach-to-user-namespace -l zsh"'

# scroll => C-[ で操作できるから無くてもいいかな
set-window-option -g mode-mouse on
set -g terminal-overrides 'xterm*:smcup@:rmcup@'
# Mac Terminal の場合は MouseTerm をインストール
# https://bitheap.org/mouseterm/

# display (Copy mode)
# bind [ copy-mode \; display "(Copy mode)"

# sprit window -v exec man
bind C-m command-prompt -p "man:" "split-window -v 'exec man %%'"

# pain split
# bind C-s split-window -v
bind C-s split-window -v -c '#{pane_current_path}'

# pain vsplit
# bind C-v split-window -h
bind C-v split-window -h -c '#{pane_current_path}'

### tmux-plugins/tmux-pain-control にこの設定あるっぽい
# vim っぽく
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# copy
# bind [ copy-mode
# bind ] paste-buffer
# vでマーク開始
bind -t vi-copy v begin-selection
# 矩形選択
bind -t vi-copy V rectangle-toggle
# yank
# bind -t vi-copy y copy-selection
bind -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
# ubuntu これでいけるようだ。
# bind-key -t vi-copy Enter copy-pipe "cat | xsel -i --clipboard"

# paste (prev window と被るからやめた)
# bind p paste-buffer


setw -g mode-keys vi

# buffer
# bind Space choose-buffer

# status
set -g status-fg black
set -g status-bg white
# set -g status-left-length 30
# set -g status-left '#[fg=white,bg=black]#H#[fg=white]:#[fg=white][#S#[fg=white]][#[default]'
# set -g status-right '#[fg=black,bg=cyan,bold] [%Y-%m-%d(%a) %H:%M]#[default]'

# window-status-current
setw -g window-status-current-fg black
setw -g window-status-current-bg magenta
# setw -g window-status-current-attr bold#,underscore

# pane-active-border
set -g pane-active-border-fg white
set -g pane-active-border-bg white
# set -g pane-active-border-bg black

### tmux-sensible にこの設定あるっぽい。
bind C-r source-file ~/.tmux.conf

# tmux-plugins/tmux-resurrect
## default key bindings
## prefix + Ctrl-s - save
## prefix + Ctrl-r - restore
set -g @resurrect-save 'S'
set -g @resurrect-restore 'R'

# tmux-plugins/tpm
# List of plugins
set -g @tpm_plugins '             \
  tmux-plugins/tpm                \
  tmux-plugins/tmux-sensible      \
  tmux-plugins/tmux-copycat       \
  tmux-yank/tmux-yank             \
  tmux-plugins/tmux-sidebar       \
  tmux-plugins/tmux-pain-control  \
  tmux-plugins/tmux-battery       \
  tmux-plugins/tmux-online-status \
  tmux-plugins/tmux-cpu           \
  tmux-plugins/tmux-resurrect     \
'
# Other examples:
# github_username/plugin_name    \
# git@github.com/user/plugin     \
# git@bitbucket.com/user/plugin  \

# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf.
run-shell '~/.tmux/plugins/tpm/tpm'



# -------------------------------------------------------------------------

# window
# c (create)  新しいウインドウを作る
# n (next)    次のウインドウへ移動
# p (prev)    前のウインドウへ移動
# 1-0 番号に対応するウインドウへ移動
# w (windows) ウインドウ一覧を表示
# ,   ウインドウに名前をつける
# & close window

# set-option        => set
# set-window-option => setw

# kill pane
# C-j x

# kill window
# C-j &

# current pane to new window
# C-j !

# -------------------------------------------------------------------------

# e.g. OS check
# if-shell "uname | grep -q Darwin" "tmux-cmd1; tmux-cmd2;" "tmux-cmd3; tmux-cmd4"
# if-shell "uname | grep -q Darwin" "source-file .tmux-macosx" "source-file .tmux-linux"


